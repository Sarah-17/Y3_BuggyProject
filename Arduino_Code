//Set up the username and password for the WAP
#include <WiFiNINA.h>
char ssid[] = "TeamY3"; 
char pass[] = "#icecream"; 

WiFiServer server(5200);
// Code to controll the DC Motors using information from the IR Sensors

// Here we define which pin on the arduino each component is attached to
const int RMOTOR_1 = 9;
const int RMOTOR_2 = 10;
const int LMOTOR_1 = 6;
const int LMOTOR_2 = 5;

const int LEYE = A4; // left IR sensor is connected to Analogue Pin 4, etc...
const int REYE = A5;

const int US_TRIG = 7;
const int US_ECHO = 8;

// setup loop will set the board up before we can run our main loop
void setup() 
{
  // put your setup code here, to run once:
  Serial.begin(9600);

  pinMode(LMOTOR_1, OUTPUT); // here we're saying that the motors will be outputs, 
  pinMode(LMOTOR_2, OUTPUT); // ie. we're sending information (voltage) to them, not receiving any
  pinMode(RMOTOR_1, OUTPUT);
  pinMode(RMOTOR_2, OUTPUT);

  pinMode(LEYE, INPUT); // we are receiving information from the IR sensors, so they are inputs
  pinMode(REYE, INPUT);

  pinMode(US_TRIG, OUTPUT);
  pinMode(US_ECHO, INPUT);

}

int distance;

void loop() {

  distance = ultra_poll();

  if (distance > 10)
  {
    if (digitalRead(LEYE) == HIGH && digitalRead(REYE) == HIGH || digitalRead(LEYE) == LOW && digitalRead(REYE) == LOW)
    {
      forward();
    }
    if (digitalRead(LEYE) == HIGH && digitalRead(REYE) == LOW) // if left is black and right is white (ie. the line is to the right, we turn right to get it back in center)
    {
      spin_right();
    }
    if (digitalRead(LEYE) == LOW && digitalRead(REYE) == HIGH)
    {
      spin_left();
    }
  }
  else 
  {
    stop();
  }
}

//FUNCTIONS FOR CONTROL
// here the different function for turning the wheels are defined, using functions makes way more sense than telling each motor what to do every time
void forward()
{
  analogWrite(LMOTOR_1, 200); // analogWrite allows us choose what voltage we send to the motor, instead of digitalWrite which is either full power or sero power
  analogWrite(LMOTOR_2, 0);
  analogWrite(RMOTOR_1, 210); // the right motor is slightly slower than the left one due to friction/wear/etc... so we give it a higher voltage than the left one (ie its been calibrated)
  analogWrite(RMOTOR_2, 0);
}

void reverse()
{
  analogWrite(LMOTOR_1, 0);
  analogWrite(LMOTOR_2, 200);
  analogWrite(RMOTOR_1, 0);
  analogWrite(RMOTOR_2, 210);
}

void stop()
{
  analogWrite(LMOTOR_1, 0);
  analogWrite(LMOTOR_2, 0);
  analogWrite(RMOTOR_1, 0);
  analogWrite(RMOTOR_2, 0);
}

void spin_left()
{
  analogWrite(LMOTOR_1, 255);
  analogWrite(LMOTOR_2, 255);
  analogWrite(RMOTOR_1, 255);
  analogWrite(RMOTOR_2, 0);
}

void spin_right()
{
   analogWrite(LMOTOR_1, 255);
  analogWrite(LMOTOR_2, 0);
  analogWrite(RMOTOR_1, 255);
  analogWrite(RMOTOR_2, 255);
}

void turn_right()
{
  analogWrite(LMOTOR_1, 255);
  analogWrite(LMOTOR_2, 0);
  analogWrite(RMOTOR_1, 150);
  analogWrite(RMOTOR_2, 0);
}

void turn_left()
{
  analogWrite(LMOTOR_1, 150);
  analogWrite(LMOTOR_2, 0);
  analogWrite(RMOTOR_1, 255);
  analogWrite(RMOTOR_2, 0);
}

int ultra_poll()
{
  int distance;
  long duration;

  digitalWrite( US_TRIG, LOW );
  delayMicroseconds(2);
  digitalWrite( US_TRIG, HIGH );
  delayMicroseconds( 10 );
  digitalWrite( US_TRIG, LOW );

  duration = pulseIn( US_ECHO, HIGH );

  distance = duration/58;

  return distance;
}
